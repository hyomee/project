buildscript {

    ext {
        springBootVersion = '3.1.3'
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.1.3"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = '17'
    }

    repositories {
        mavenCentral()
        mavenLocal()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    // 모든 모듈에서 사용하는 라이브러리
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter:3.1.3'
        implementation 'org.springframework.boot:spring-boot-starter-web:3.1.3'

        implementation group: 'org.reflections', name: 'reflections', version: '0.10.2'
        /**********************************************
         * 생산성
         **********************************************/
        compileOnly 'org.projectlombok:lombok:1.18.28'
        annotationProcessor 'org.projectlombok:lombok:1.18.28'

        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        /**********************************************
         * util
         **********************************************/
        // https://mvnrepository.com/artifact/org.apache.commons/commons-io
        implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.13.0'
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

        // https://mvnrepository.com/artifact/com.fasterxml.uuid/java-uuid-generator
        implementation group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '4.2.0'


        testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.3'
        testCompileOnly 'org.projectlombok:lombok:1.18.26'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
//        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//        implementation 'org.springframework.boot:spring-boot-starter-freemarker'
//        implementation 'org.springframework.boot:spring-boot-starter-web'
//        implementation 'org.springframework.boot:spring-boot-starter-actuator'
//        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//        //embedded-redis
//        implementation 'it.ozimov:embedded-redis:0.7.2'
//        implementation 'io.springfox:springfox-swagger2:2.6.1'
//        implementation 'io.springfox:springfox-swagger-ui:2.6.1'
//        implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'
//        implementation 'com.google.code.gson:gson'
//        compileOnly 'org.projectlombok:lombok'
//        runtimeOnly 'com.h2database:h2'
//        runtimeOnly 'mysql:mysql-connector-java'
//        annotationProcessor 'org.projectlombok:lombok'
//        testImplementation 'org.springframework.security:spring-security-test'
//        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}
//
project(':core') {

    tasks.named("jar") {
        archiveClassifier = ''
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = 'com.hyomee'
                artifactId 'hyomee-core'
                version '1.0'
                artifact tasks.named("jar")
            }

//            repositories {
//                maven {
//                    url 'https://repo.example.com'
//                }
//            }
        }
    }

    // core 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
    dependencies {
//        implementation 'org.springframework.boot:spring-boot-starter-security'
//        implementation 'io.jsonwebtoken:jjwt:0.9.1'
    }
}
//
//project(':jpa') {
//
//    tasks.named("bootJar") {
////        archiveClassifier = 'boot'
//        mainClass = 'com.hyomee.jpa.JpaApplication'
//        manifest {
//            attributes 'Start-Class': 'com.hyomee.jpa.JpaApplication'
//        }
//    }
//
//    tasks.named("jar") {
//        archiveClassifier = ''
//    }
//
//
//    publishing {
//        publications {
//            mavenJava(MavenPublication) {
//                groupId = 'com.hyomee'
//                artifactId 'hyomee-jpalib'
//                version '1.0'
//                artifact tasks.named("jar")
//            }
//
//            bootJava(MavenPublication) {
//                groupId = 'com.hyomee'
//                artifactId 'hyomee-jparun'
//                version '1.0'
//                artifact tasks.named("bootJar")
//            }
////            repositories {
////                maven {
////                    url 'https://repo.example.com'
////                }
////            }
//        }
//    }
//    // user 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
//    dependencies {
//
//        runtimeOnly 'com.h2database:h2:2.1.214'
//
//        implementation project(':core')
//
//        implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
//        // QueryDSL Implementation
//        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//        annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
//        annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
//        annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
//    }
//}
//
//project(':module-board') {
//    // board 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
//    dependencies {
//        compile project(':module-common')
//    }
//}